#!/usr/bin/env python
#-*- coding: utf-8 -*-
'''
MODULE:     g.gui.soilloss (helper for GRASS 6)

AUTHOR(S):  Martin Zbinden <martin.zbinden@immerda.ch>

PURPOSE:    Used by QGIS GRASS plugin to run module g.gui.soilloss in GRASS 7, which has actually all the functionality.

VERSION:    0.2

DATE:       Mon Aug 04 16:00:00 CET 2014

COPYRIGHT:  (C) 2014 Martin Zbinden and by the GRASS Development Team

This program is free software under the GNU General Public License
(>=v2). Read the file COPYING that comes with GRASS for details.
'''
#%module
#%  description: Calculate potential and realized soilloss for Switzerland (cantons BE, FR, SO). Change region automatically to parcels of <betriebid>. Automatically imports needed data from OWS-server (preconfigured in module). (This is only a helper module which is actually going to use GRASS 7).
#%    keywords: erosion
#%end

#%option
#%  type: string
#%  key: betriebid
#%  key_desc: name
#%  description: Betriebsnummer/Fallnummer
#%  required: yes
#%end

#%option
#%  key: task   
#%  key_desc: name
#%  description: Aufgabe
#%  options: soilloss.bare,soilloss.bare.update,soilloss.grow,soilloss.grow.measure, soilloss.cpmax,slope.stats
#%  required: yes
#%  multiple:no
#%end

#%option
#%  key: output
#%  type: string
#%  key_desc: name
#%  gisprompt: new,cell,raster
#%  description: Ausgabekarte (v.a. für Anzeige)
#%  answer:  output
#%  required: yes
#%end

#%option
#%  key: configuration
#%  type: string
#%  key_desc: name
#%  description: Server-Konfiguration
#%  answer: default
#%  guisection: server
#%  required: no
#%end

#%option
#%  key: username
#%  type: string
#%  key_desc: name
#%  description: Benutzername
#%  guisection: server
#%  required: no
#%end

#%option
#%  key: password
#%  type: string
#%  key_desc: name
#%  description: Passwort
#%  guisection: server
#%  required: no
#%end

#%flag
#%  key: b
#%  description:  neu definierte Barrieren berücksichtigen
#%end
#%flag
#%  key: g
#%  description:  Region nicht den Parzellen anpassen
#%end
#%flag
#%  key: i
#%  description:  Alle Daten nochmals importieren
#%end
#%flag
#%  key: n
#%  description: Keine Daten importieren (offline)
#%end
#%flag
#%  key: c
#%  description: Nicht Resultate nach Ausgabekarte kopieren
#%end
#%flag
#%  key: s
#%  description: Parzellenweise Statistik ausgeben
#%end

#%flag
#%  key: o
#%  description: Vorhandene Karten überschreiben
#%end
#%flag
#%  key: v
#%  description: Mehr Ausgaben anzeigen (verbose)
#%end

import sys
import os
import grass.script as gscript
import grass.script as gscript6
import subprocess


def main(options, flags):
    configuration = options['configuration']    
    output = options['output']
    betriebid = options['betriebid']
    task = options['task']
    username = options['username']
    password = options['password']
        
    flag_b = flags['b'] #use newly defined barriers
    flag_g = flags['g'] #don't set region according to parcel data
    flag_i = flags['i'] #force reimport of base data
    flag_n = flags['n'] #don't import anything (offline mode)
    flag_c = flags['c'] #don't copy results to output raster map
    flag_s = flags['s'] #calculate statistics for results
    flag_v = flags['v'] #verbose
    flag_o = flags['o'] #overwrite
    
    env = gscript6.parse_command("g.gisenv", flags='s')
    gisdb = env['GISDBASE'].strip(";'").lstrip("'")
    location = env['LOCATION_NAME'].strip(";'").lstrip("'")
    mapset = env['MAPSET'].strip(";'").lstrip("'")


    # filter out old grass paths
    oldpath =  os.environ['PATH']
    newpath = ':'.join([elem for elem in oldpath.split(':') if 'grass' not in elem])
    os.environ['PATH'] = newpath
    gisbase = '/usr/local/grass-7.0.0beta3'
    os.environ['GISBASE'] = gisbase
    os.environ['PATH'] += ':' + os.getenv('HOME') + '.grass7/addons'
    os.environ['PATH'] += ':' + gisbase + '/bin'
    os.environ['PATH'] += ':' + gisbase + '/scripts'
    os.environ['PATH'] += ':/usr/lib/grass64/bin'
    
    oldlibpath = os.environ['LD_LIBRARY_PATH']
    os.environ['LD_LIBRARY_PATH']  += gisbase + '/lib:' + oldlibpath

    os.environ['PYTHONPATH'] = gisbase + '/etc/python'
    print os.environ['PATH']

    
    # define GRASS-Python environment
    gpydir = os.path.join(gisbase, "etc", "python")
    sys.path.append(gpydir)
 
    # define GRASS DATABASE
    os.environ['GISDBASE'] = gisdb
     
    # import GRASS Python bindings (see also pygrass)
    #import grass.script as gscript
    import grass.script.setup as gsetup
    #from grass.pygrass.modules import Module
     
    ###########
    # launch session
    gsetup.init(gisbase,
                gisdb, location, mapset)
    

    gscript.message('Current GRASS GIS 7 environment:')
    #print gscript.gisenv()
    
    print os.environ['GRASS_ADDON_PATH']

    gscript.run_command("g.gui.soilloss",
                        betriebid=betriebid,
                        task=task,
                        output=output,
                        username=username,
                        password=password
                        )
                        
            


'''
END main
'''
if __name__ == "__main__":
    options, flags = gscript.parser()
    main(options, flags)



